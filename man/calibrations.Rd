% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibrations.R
\name{calibrations}
\alias{calibrations}
\alias{dL}
\alias{pL}
\alias{qL}
\alias{dB}
\alias{pB}
\alias{qB}
\alias{dU}
\alias{pU}
\alias{qU}
\title{Calibration densities}
\usage{
dL(x, tL, p = 0.1, c = 1, pL = 0.025)

pL(q, tL, p = 0.1, c = 1, pL = 0.025)

qL(prob, tL, p = 0.1, c = 1, pL = 0.025)

dB(x, tL, tU, pL = 0.025, pU = 0.025)

pB(q, tL, tU, pL = 0.025, pU = 0.025)

qB(prob, tL, tU, pL = 0.025, pU = 0.025)

dU(x, tU, pU = 0.025)

pU(q, tU, pU = 0.025)

qU(prob, tU, pU = 0.025)
}
\arguments{
\item{x}{numeric, vector of quantiles}

\item{tL}{numeric, minimum age}

\item{p}{numeric, mode parameter for truncated Cauchy}

\item{c}{numeric, tail decay parameter for truncated Cauchy}

\item{pL}{numeric, minimum probability bound}

\item{q, }{numeric, quantile}

\item{prob, }{numeric probability}

\item{tU}{numeric, maximum age}

\item{pU}{numeric, maximum probability bound}
}
\value{
A vector of density, probability, or quantile values as appropriate.
}
\description{
Density, distribution, and quantile functions for calibrations 
used in MCMCtree.
}
\details{
Calculates the density, distribution and quantile functions for the minimum,
\code{dL}, joint, \code{dB}, and maximum, \code{dU}, calibration bounds as
implemented in MCMCtree (Yang and Rannala, 2006; Inoue et al. 2010). The
minimum bound is implemented using a truncated Cauchy distribution (Inoue et
al. 2010).
}
\examples{
# Plot a minimum bound calibration density:
curve(dL(x, 1), from=0, to=10, n=5e2)
# Cumulative distribution:
curve(pL(x, 1), from=0, to=10, n=5e2)

# Plot a joint bounds calibration density:
curve(dB(x, 1, 6), from=0, to=10, n=5e2)
# Cummulative distribution:
curve(pB(x, 1, 6), from=0, to=10, n=5e2)

# Plot a maximum bound calibration density:
curve(dU(x, 6), from=0, to=10, n=5e2)
# Cummulative distribution:
curve(pU(x, 6), from=0, to=10, n=5e2)

# Check quantile function for minimum bound (or truncated-Cauchy):
qv <- 0:20; pvL <- pL(qv, tL=1)
# calculate quantiles back from probability vector:
# (note numerical error)
plot(qv, qL(pvL, tL=1)); abline(0, 1)

# Check quantile function for joint bounds:
pvB <- pB(qv, tL=2, tU=10, pL=.02, pU=.1)
# calculate quantiles back:
plot(qv, qB(pvB, tL=2, tU=10, pL=.02, pU=.1)); abline(0, 1)

# Check quantile function for upper bound:
pvU <- pU(qv, tU=15, pU=.15)
# calculate quantiles back:
plot(qv, qU(pvU, tU=15, pU=.15)); abline(0, 1)

}
\references{
Yang and Rannala. (2006) Bayesian Estimation of Species Divergence Times
Under a Molecular Clock Using Multiple Fossil Calibrations with Soft Bounds.
\emph{Mol. Biol. Evol.}, 23: 212–226.

Inoue, Donoghue and Yang (2010) The Impact of the Representation of Fossil
Calibrations on Bayesian Estimation of Species Divergence Times. \emph{Syst.
Biol.}, 59: 74–89.
}
\author{
Mario dos Reis
}
